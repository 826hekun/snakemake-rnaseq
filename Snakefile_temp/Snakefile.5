SAMPLES = ["Cs1_rep1", "Cs1_rep2", "Cs2_rep1", "Cs2_rep2", "Cs3_rep1", "Cs3_rep2", "Cs4_rep1", "Cs4_rep2", "Cs5_rep1", "Cs5_rep2"]

rule all:
  input:
    expand("aligned/{sample}.bam", sample=SAMPLES),
    "quanti/genes.counts.matrix",
    "quanti/genes.TMM.TPM.matrix"

rule trim_fastq:
  input:
    r1="raw_data/{sample}_1.fastq.gz",
    r2="raw_data/{sample}_2.fastq.gz"
  output:
    r1="clean_data/{sample}_1.fastp.fastq.gz",
    r2="clean_data/{sample}_2.fastp.fastq.gz",
    report="clean_data/{sample}.fastp.html",
    json="clean_data/{sample}.fastp.json"
  shell:
    """
      fastp -i {input.r1} -I {input.r2} \
        -o {output.r1} -O {output.r2} \
        -h {output.report} -j {output.json}
    """

rule build_hisat2_index:
  input:
    genome="ref/genome.fa"
  output:
    idx=expand("genome.hisat2.{idx}.ht2", idx=range(1, 9))
  shell:
    """
      hisat2-build {input.genome} genome.hisat2
    """

rule align_hisat2:
  input:
    r1="clean_data/{sample}_1.fastp.fastq.gz",
    r2="clean_data/{sample}_2.fastp.fastq.gz",
    idx=expand("genome.hisat2.{idx}.ht2", idx=range(1, 9))
  output:
    sam="aligned/{sample}.sam",
    log="aligned/{sample}.hisat2.log"
  shell:
    """
      hisat2 -x genome.hisat2 -1 {input.r1} -2 {input.r2} \
        --new-summary --rna-strandness RF \
        -S {output.sam} \
        1> {output.log} 2>&1 
    """

rule samtools_sort_idx:
  input:
    sam="aligned/{sample}.sam"
  output:
    bam="aligned/{sample}.bam",
    idx="aligned/{sample}.bam.bai"
  shell:
    """
      samtools sort -o {output.bam} {input.sam}
      samtools index {output.bam}
    """

rule quanti_featureCounts:
  input:
    bam="aligned/{sample}.bam",
    gtf="ref/genes.gtf"
  output:
    expr="quanti/{sample}.count",
    log="quanti/{sample}.log"
  params:
    prefix="quanti/{sample}"
  shell:
    """
      Rscript software/RunFeatureCounts/run-featurecounts.R \
	-b {input.bam} -g {input.gtf} -s 2 -o {params.prefix}
    """

rule abundance_estimates_to_matrix:
  input:
    exprs=expand("quanti/{sample}.count", sample=SAMPLES)
  output:
    counts_mat="quanti/genes.counts.matrix",
    tpm_mat="quanti/genes.TMM.TPM.matrix"
  shell:
    """
    ls {input.exprs} >quant_files.txt
    perl software/RunFeatureCounts/abundance_estimates_to_matrix.pl \
	--est_method featureCounts \
        --out_prefix quanti/genes \
        --quant_files quant_files.txt

    # add feature id
    sed -i '1s/^/gene_id/' {output.counts_mat}
    sed -i '1s/^/gene_id/' {output.tpm_mat}
    """
